services:
  # PostgreSQL Database
  fuar-db:
    image: postgres:15-alpine
    container_name: fuar-postgres
    environment:
      POSTGRES_DB: fuar_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - fuar-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d fuar_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Application
  fuar-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fuar-spring-app
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://fuar-db:5432/fuar_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: secret
      # Upload directory configurations
      APP_UPLOAD_DIR: /app/uploads
      APP_PROFILE_IMAGES_DIR: /app/uploads/profiles
      # JVM options to avoid metrics problems
      JAVA_OPTS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1 -Dcom.sun.management.jmxremote=false"
    ports:
      - "8082:8080"
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      fuar-db:
        condition: service_healthy
    networks:
      - fuar-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/auth/check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
    driver: local

networks:
  fuar-network:
    driver: bridge
